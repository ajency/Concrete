<script>
function isImageValid(image_url){
    var http = new XMLHttpRequest();
    http.open('HEAD', image_url, false);
    http.send();
    return (http.status != 404);
}
</script>
  <!-- ======= Sub header Section ======= -->
  <section id="subheader" class="subheader"> 
        <div class="container">
          <div class="subheader-wrapper">
              <div class="list-view">
                 {% section 'collection-header' %}
              </div>
              <div class="filters">
                  <div class="filters-option">
                      <span>Filter Concerns</span>
                      <div class="dropdown">
                          <button type="button" class="btn dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Show All</button>
                          <ul class="dropdown-menu">
                              <div class="form-group has-search">
                                  <input type="text" class="form-control form-search" placeholder="Search" id="search">
                              </div>
                              <div class="filter-block">
                                <form class="form-horizontal" action="">
                                 <div class="select-option d-flex">
                                    <div id="ck-button">
                                        <label>
                                        <input type="checkbox" id="checkAll">Select All
                                        </label>
                                   </div>
                                    <span class="clear">Clear</span>
                                </div>
                                  
                                  <div class="form-group tags categories">
                                    {% for collection in collections %}
                                    <div class="checkbox"><label for="category-{{collection.id}}"><input type="checkbox" name="collection-name" rel="category-{{collection.id}}" id="category-{{collection.id}}"/> {{collection.title}} <span class="checkmark"></span> </label></div>
                                    {% endfor %}
                                  </div>
                                </form>
                              </div>
                          </ul>
                      </div>
                      <span>Sort By</span>
                      <div class="dropdown">
                          <div class="collSortBy">
                            <button type="button" class="btn dropdown-toggle sort-select sort-closed" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Select All</button>
                            <ul class="sort-list dropdown-menu">
                              <li class="sort-element dropdown-item" data-value="all"><span class="sort-link">All</span></li>
                              <li class="sort-element dropdown-item" data-value="low-to-high"><span class="sort-link">Price: Low to High</span></li>
                              <li class="sort-element dropdown-item" data-value="high-to-low"><span class="sort-link">Price: High to Low</span></li>
                              <li class="sort-element dropdown-item" data-value="name-az"><span class="sort-link">Name A-Z</span></li>
                              <li class="sort-element dropdown-item" data-value="name-za"><span class="sort-link">Name Z-A</span></li>
                            </ul>
                          </div>
                    </div>
                  </div>
                  <div class="filters-btn">
                      <button>Filters{{ 'filter.svg' | asset_url | img_tag: 'filter', 'filter' }}</button>
                  </div>
              </div>
          </div>
      </div>
  </section>
  <!-- End Sub header -->
    <!-- ======= Filter Tags ======= -->
      <div class="filtered-data">
          <div class="container">
              <div id="tagFilter" class="tag">
                  
              </div>
          </div>
      </div>

<div class="container">
  <div class="grid" data-masonry='{ "itemSelector": ".grid-item", "columnWidth": ".col-sm-12" }'>
     {% for collection in collections %}
      <section class="grid-item col-12" id="category-{{collection.id}}">
        <ul class="results list-unstyled">
          <li class="category-{{collection.id}} topic-one">
              <section class="banner-section">
                    {% if collection.image != blank  %}
                    <div class="container banner-image deskMode">
                          {%- assign image_object = collection.image  -%}
                          {% render 'responsive-image' with
                            image: image_object,
                            max_width: 480,
                            max_height: 480
                          %}
                      </div>
                      <div class="container banner-image mobileMode">
                        {% if collection.metafields.collection_meta.mobile_banner != blank %}
                        <img src="{{collection.metafields.collection_meta.mobile_banner}}">
                        {% else %}           
                          {%- assign image_object = collection.image  -%}
                          {% render 'responsive-image' with
                            image: image_object,
                            max_width: 480,
                            max_height: 480
                          %} 
                        {% endif %}
                      </div>
                    {% elsif collection.image == blank %}
                        <div class="container banner" style="background-color:{{collection.metafields.collection_meta.bg_color}}">
                          <div class="bannerText">
                            <h2 class="heading">
                              {{ collection.title }}
                            </h2>
                            <p class="subText">{{collection.description}}
                            </p>
                          </div>
                        </div>
                    {% endif %}
                 </section>
                 <section class="featured-products container ">
        
                    <div class="collection__products">
                        {% for product in collection.products %}
                         <div class="product-card">
                             <!--<script>console.log({{ collection.products | json }});</script> -->
                          <a href="{{ product.url | within: collection }}">
                              <div class="product-image-card row" style="background: linear-gradient(270.17deg, #fff 1.03%, rgba(255, 255, 255, 0) 99.94%), {{collection.metafields.collection_meta.bg_color}};">
                                {% if product.featured_image != blank %}
                                  <div class="product-img">
                                    <img class="product__img" src="{{ product.featured_image | img_url: '300x300' }}" alt="{{ product.featured_image.alt }}" />
                                  </div>
                                {% endif %}
                                  <div class="product-tags">

                                    {% assign tags = product.metafields.product_meta.product_card_tags | split: ";" %}
                                    {% assign tags_text = product.metafields.product_meta.product_card_tags_text | split: ";" %}
                                    {% for tag in tags %}
                                      {% assign index = forloop.index | minus: 1%}
                                      <span>
                                        {% capture tag_slug %}{{ tag | replace: " ", "_" | downcase }}{% endcapture %}
                                        {% assign img_svg = tag_slug | append: '.png'%}
                                        {% assign img_default = tag_slug | append: '.png'%}
                                        <script>
                                          $(document).ready(function(){
                                            var valid_image = isImageValid('{{ img_svg | file_url }}');
                                              if(!valid_image){
                                                $('.item-highlight-{{ forloop.index }}').attr('src', '{{ img_default | file_url }}');
                                              }
                                          });
                                        </script>          
                                        <img class='item-highlight-{{ forloop.index }}' src="{{ img_svg | file_url }}" alt="{{ tag_slug | escape }}">{{ tags_text[index] }}
                                      </span>
                                    {% endfor %}
                                </div>
                              </div>

                              <div class="row"> 
                                <div class="product-description">         
                                   <div class="product-details position-relative">
                                      <h3 class="product__title">{{ product.title }}</h3>
                                     {% if product.metafields.product_meta.product_des != blank %}
                                      <span>{{product.metafields.product_meta.product_des}}</span>
                                    {% endif %} 
                                  </div>
                                   <div class="price-bar">
                                      <div>
                                          <p class="product__price product-price">{{ product.price | money_without_trailing_zeros | remove: "," }}</p>
                                          {% if product.compare_at_price > product.price %}
                                          <span class="product-sale-price" data-compare-price>
                                              {{ product.compare_at_price | money_without_trailing_zeros | remove: "," }}
                                          </span>
                                        {% endif %}
                                        <span class="product-offer">
                                          {% assign savePrice = product.compare_at_price | minus: product.price %}
                                            {% assign results = 0.000 | plus:savePrice | divided_by: product.compare_at_price | times: 100 | round %}
                                             ({{ results }}% Off)
                                         </span>
                                      </div>
                                      <div class="add-btn">
                                         <button
                                            type="submit"
                                            name="add"
                                            class="btn-text"
                                            data-submit-button
                                            {% unless current_variant.available %}disabled="disabled"{% endunless %}>
                                              <span data-submit-button-text>
                                                  + Add*
                                              </span>
                                          </button>
                                      </div>
                                   </div>
                                 </div>
                              </div>
                            </a>
                         </div>

                        {% else %}
                          {% if collection.handle == 'all' and collection.all_vendors.size == 0 and collection.all_types.size == 0 %}
                            {% for i in (1..8) %}
                              <a href="#">
                                {% capture current %}{% cycle 1, 2, 3, 4, 5, 6 %}{% endcapture %}
                                {{ 'product-' | append: current | placeholder_svg_tag: 'placeholder-svg placeholder-svg--small' }}
                              </a>

                              <p>
                                <a href="#">{{ 'homepage.onboarding.product_title' | t }}</a>
                              </p>

                              <p>
                                {{ 1999 | money }}
                              </p>
                            {% endfor %}
                          {% else %}
                            <p>{{ 'collections.general.no_matches' | t }}</p>
                          {% endif %}

                        {% endfor %}
                      </div>
                </section>
          </li>
        </ul>
    </section>
    
    {% endfor %}
  </div>
</div>


  <script>


//show all categories
var _showCategories = function(item) {
  for (var x = 0; x < item.length; ++x) {
    $(item[x]).fadeIn();
  }
};

var categories = [],
  resources = [],
  initial = "";

//list all the category blocks
    {% for collection in collections %}
    var catname = "#category-{{collection.id}}";
    categories.push(catname); 
  {% endfor %}


$('div.tags').find('input[type="checkbox"]').click(function() {

  resources = [];
  initial = "";
  
  if ($('div.tags.categories input[type="checkbox"]:checked').length > 0) {
    $('.results li').hide();

    $('div.tags').find('input:checked').each(function() {
      if (($.inArray($(this).attr('rel'), resources)) === -1) {
        resources.push($(this).attr('rel'));
      }


      
      initial = resources.toString();
      initial = initial.replace(/,/g, '.');
    });    
    
    for (var i=0; i< resources.length; i++){
      for (var j=0; j < categories.length; j++){
        if(categories[j] == '#' + resources[i]){
             $(".results > li." + resources[i]).fadeIn()
             $(categories[j]).fadeIn(); 
        }
       }
    }
    
  } else {
    $('.results > li').fadeIn('fast');
    _showCategories(categories);
  }
});


$('.clear').click(function() {
  $('div.tags').find('input:checked').each(function() {
    $('input[type="checkbox"]:checked').prop('checked',false);
  }); 
  $('.results > li').fadeIn('fast');
  _showCategories(categories);
});
    
 $(document).ready(function () {
   $("#checkAll").click(function () {
     $('input[type="checkbox"]').prop('checked', $(this).prop('checked'));
   });
   $('.results > li').fadeIn('fast');
   _showCategories(categories);

   $('input[type="checkbox"]').click(function(){ //".checkbox" change 
     if($('input[type="checkbox"]:checked').length == $('input[type="checkbox"]').length){
       $('#checkAll').prop('checked',true);
       $('.results > li').fadeIn('fast');
       _showCategories(categories);
     }else{
       $('#checkAll').prop('checked',false);
     }
   });
 }); 
    
 $('.nav li.nav-item').find('a').click(function() {
   var filterType =  $(this).attr('id');
   $('.results li').hide();
   var categories = [];
   var categoriesId = [];
    {% for collection in collections %}
      var catname = "category-{{collection.id}}-{{collection.title}}";
    categories.push(catname); 
  {% endfor %}
   {% for collection in collections %}
      var catId = "category-{{collection.id}}";
    categoriesId.push(catId); 
  {% endfor %}
     for (var x = 0; x < categories.length; x++) { 
       for(var y = 0; y < categoriesId.length; y++){
         if(filterType == 'All'){
           $('.results > li').fadeIn('fast');
           _showCategories(categoriesId);
         } 
         else if(categories[x] == categoriesId[y] + '-' + filterType){
           $(".results > li." + categoriesId[y]).fadeIn();
           $(categoriesId[y]).fadeIn();
         }
       }
     }
 });    
 
//   $('.sort-list').find('.sort-element').click(function() {
//     $('.results li').hide();
//  var sortType =  $(this).attr('data-value');
//     var sortArr = [];
//     var tempArr = []; 
  
    
//     {% assign collection.products = tempArr %} 
//     {% assign sortArr = collection.products %} 
//     console.log(sortArr);
//     {% for product in collection.products %}
//      sortArr.push({{product | json}});
//  {% endfor %}    
//  console.log(sortArr);
//     console.log(tempArr);
//  });    
    
  (function ($) {
     $(document).ready(function(){
        $('#search').keyup(function(){
           var valThis = $(this).val().toLowerCase();
            $("input[name='collection-name']").each(function(){
                var text = $("label[for='"+$(this).attr('id')+"']").text();
               (text.indexOf(valThis) >= 0 ) ? $(this).parent().show() : $(this).parent().hide();
              });
         });
      
    
    
    $('input[type="checkbox"]').click(function(){
    var text = [];
      var res = '';
      $('input[type="checkbox"]:checked').each(function(){
        text.push($("label[for='"+$(this).attr('id')+"']").text());
      });
      $('.tag').empty('<span class="tag-name"><span aria-hidden="true" id="close-tag" class="icon">×</span></span>');
      for (var i=0; i < text.length; i++){
         var taggedName = $('.tag').append('<span class="tag-name" id='+text[i]+'>' +  text[i]  + '<span onclick="closeTags()" aria-hidden="true" class="icon">×</span></span>');
        if(i == (text.length - 1)){
          $('.tag').append('<a onclick="clearTags()" class="link clear" id="clearTags">Clear All</a>');
        }
      }
  });
            });
 })(jQuery); 
    
    function closeTags(){
        var arrId = [];
        $('.tag span').click(function(){
            var clear = document.getElementsByClassName('.tag span');
            console.log(clear);
        var val = $(this).text();
             arrId = val.split(' ');
             //console.log(val);
            if(arrId[1] != null){
              $('#'+arrId[1]).remove();
            }
    });
  }
   function clearTags(){
       $('#clearTags').remove();
       $('.tag span').remove();
     }
</script>  
    
  

    
    
    
    